[
  { "id": "1501504594165186563", "text": "#Windows11 #WindowsUpdate Windows 11にアップデートしたあとwindows updateして再起動したら失敗して初期化する必要ようになった。。。買ったばかりだからなんともないが、データが残っている場合はバックアップをしておいたほうがいいな", "link": "https://twitter.com/Katsun0921/status/1501504594165186563", "service": "twitter", "date_created": "2022/03/09T10:00Z", "date_unix": 1646821566 },
  { "id": "1501499653749022721", "text": "タイトルでバズりそうだな。記事を読んでみるとわからなくもない。確かに「USB Type-C」と「Thunderbolt」はわかりにくい。得体の知れない「Type-C」端子、旧来のUSBと比べてなぜとっつきにくい？", "link": "https://twitter.com/Katsun0921/status/1501499653749022721", "service": "twitter", "date_created": "2022/03/09T10:00Z", "date_unix": 1646820388 },
  { "id": "1501133940496613379", "text": "@PentaPROgram dataをdataそのままか、arrDataにするかで迷っちゃいます。", "link": "https://twitter.com/Katsun0921/status/1501133940496613379", "service": "twitter", "date_created": "2022/03/08T09:00Z", "date_unix": 1646733195 },
  { "id": "1501132487178657792", "text": "ついでに、らーめんとカレーのルーもかな。", "link": "https://twitter.com/Katsun0921/status/1501132487178657792", "service": "twitter", "date_created": "2022/03/08T09:00Z", "date_unix": 1646732849 },
  { "id": "1501110972101971971", "text": "#mdn もしかして、mozillaのdeveloperサイトリニューアルしたのかテキストが小さくなった", "link": "https://twitter.com/Katsun0921/status/1501110972101971971", "service": "twitter", "date_created": "2022/03/08T08:00Z", "date_unix": 1646727719 },
  { "id": "1500697847800287234", "text": "@clockmaker １に共感します!あと某○天のecサービスでキャンペーン登録や商品を購入時に自動でメルマガの配信にチェックがついている。見逃すと次の日から大量のメールが受信されている。", "link": "https://twitter.com/Katsun0921/status/1500697847800287234", "service": "twitter", "date_created": "2022/03/07T05:00Z", "date_unix": 1646629223 },
  { "id": "1500696508139597825", "text": "@0000snao Another", "link": "https://twitter.com/Katsun0921/status/1500696508139597825", "service": "twitter", "date_created": "2022/03/07T04:00Z", "date_unix": 1646628903 },
  { "id": "1500695257981210626", "text": "#日経平均明日には25,000を割り込みそうだ。国民に省エネと言うなの我慢をしいて、何もしなければ当然かな日経225先物 (JP225)は¥25,165.0 (-2.45%)です", "link": "https://twitter.com/Katsun0921/status/1500695257981210626", "service": "twitter", "date_created": "2022/03/07T04:00Z", "date_unix": 1646628605 },
  { "id": "1500630572527669249", "text": "#リモートワーク日本にも進出してほしいな〜リモートワークのすべてがそろうサービスアパートメント「Anyplace Select」--米国で稼働率96％", "link": "https://twitter.com/Katsun0921/status/1500630572527669249", "service": "twitter", "date_created": "2022/03/07T00:00Z", "date_unix": 1646613183 },
  { "id": "1499845058710806531", "text": "#楽天スーパーセール Core i5搭載・8GBメモリ・256GB SSDぐらいのレベルで18万だったのだが、今のノートPCはこんな高い相場なの？半額セールが過ぎても半額で売っている。", "link": "https://twitter.com/Katsun0921/status/1499845058710806531", "service": "twitter", "date_created": "2022/03/04T20:00Z", "date_unix": 1646425902 },
  { "id": "1499624100704129026", "text": "@oryzae1824 こんなやつですね。", "link": "https://twitter.com/Katsun0921/status/1499624100704129026", "service": "twitter", "date_created": "2022/03/04T05:00Z", "date_unix": 1646373221 },
  { "id": "1499597467519623173", "text": "不覚にもかわいいと思ってしまった", "link": "https://twitter.com/Katsun0921/status/1499597467519623173", "service": "twitter", "date_created": "2022/03/04T04:00Z", "date_unix": 1646366872 },
  { "id": "1499597256051212289", "text": "そんなところにいて消えないのか?", "link": "https://twitter.com/Katsun0921/status/1499597256051212289", "service": "twitter", "date_created": "2022/03/04T04:00Z", "date_unix": 1646366821 },
  { "id": "1499479832178016264", "text": "ネタと思いたい。。。", "link": "https://twitter.com/Katsun0921/status/1499479832178016264", "service": "twitter", "date_created": "2022/03/03T20:00Z", "date_unix": 1646338825 },
  { "id": "1499220619262496769", "text": "あとこんなのが流れてきたら怖いよ～", "link": "https://twitter.com/Katsun0921/status/1499220619262496769", "service": "twitter", "date_created": "2022/03/03T03:00Z", "date_unix": 1646277024 },
  { "id": "1499220368417951745", "text": "家の壁にいました!", "link": "https://twitter.com/Katsun0921/status/1499220368417951745", "service": "twitter", "date_created": "2022/03/03T03:00Z", "date_unix": 1646276964 },
  { "id": "1498963897969098752", "text": "今回は２つかな", "link": "https://twitter.com/Katsun0921/status/1498963897969098752", "service": "twitter", "date_created": "2022/03/02T10:00Z", "date_unix": 1646215817 },
  { "id": "https://zenn.dev/katsun0921/articles/idea_aws_ec2_01", "text": "AWSのEC2デフォルトシェルをbashからzshに変更する\nZSHをインストールローカル環境だとzshだったが、AWSではbashでコマンドの予測変換が使いづらいな〜と感じていたのでzshに変換しました。ただいろいろ面倒だったので、記録しました。すでにec2インスタンスがあり、ssh-ixxx.pemec2-user@ip-addressで、sshできている前提のメモになります。zshをインストールインストールは簡単。yumでインストール。#amazonlinux2でインスタンスを作成した場合になります。sudoyuminstallzshcat/etc/shells#こちらが新しく追加されてます。...", "link": "https://zenn.dev/katsun0921/articles/idea_aws_ec2_01", "service": "zenn", "date_created": "2022/02/23T03:00Z", "date_unix": 1645587623 },
  { "id": "https://zenn.dev/katsun0921/articles/portfolio_05", "text": "記事をデータベースに格納 | 5 | オリジナルフィードアプリ作成\nデータベースに記事を格納しました追加記事の取得をいろいろ考えてみたところ、今までの記事をデータベースに格納することにして追加記事を取得することにしました。一時的にファイルを作成してみることも考えてみたのですが、下記の理由からやめました。リクエストするたびにファイルを作成するのかTwitterは20回までやIDから取得する記事を判別できるが、feedはリクエスト時に全て取得するといったリクエスト時の情報取得が違う新しいサービスを追加するとどうするかgolang-migrate環境はMacOSの場合brewinstallgolang-migrategoge...", "link": "https://zenn.dev/katsun0921/articles/portfolio_05", "service": "zenn", "date_created": "2021/12/10T09:00Z", "date_unix": 1639129294 },
  { "id": "https://zenn.dev/katsun0921/articles/portfolio_04", "text": "Twitter APIを取得| 4 | オリジナルフィードアプリ作成\n作業内容前回まではzennとtwitterのそれぞれのサービスで投稿した情報を取得し、jsonで返しましたので今回はこれらを合わせたものを投稿日の降順にjsonで返したいと思います。Controllerapis_controller.gopackageapisimport(\"errors\"\"github.com/gin-gonic/gin\"\"github.com/katsun0921/go_utils/logger\"\"github.com/katsun0921/go_utils/rest_errors\"\"github.com/kat...", "link": "https://zenn.dev/katsun0921/articles/portfolio_04", "service": "zenn", "date_created": "2021/11/28T00:00Z", "date_unix": 1638060712 },
  { "id": "https://zenn.dev/katsun0921/articles/portfolio_03", "text": "Twitter APIを取得 | オリジナルフィードアプリ作成_3\ntwitterapiからRESTApiとしてJSON値を取得しレスポンスを返す前回の続きRSSからRESTAPIを返すから今度はtwitterapiから任意のJSONを返しました。※：作成中の部分もあり、正常系のテストとかも書いていないので途中でコードが変わるかもしれません。ディレクトリ├──LICENSE├──README.md├──go.mod├──go.sum└──src├──app│├──application.go│└──url_mappings.go├──constants...", "link": "https://zenn.dev/katsun0921/articles/portfolio_03", "service": "zenn", "date_created": "2021/11/15T01:00Z", "date_unix": 1636939986 },
  { "id": "https://zenn.dev/katsun0921/articles/portfolio_02", "text": "RSSからREST APIを返す | オリジナルフィードアプリ作成_2\nrssapiからRESTApiとしてJSON値を取得しレスポンスを返す前回の続きベーシックなMVCを作成から今度はzennのrssから任意のJSONを返しました。※作成中の部分もあり、正常系のテストとかも書いていないので途中でコードが変わるかもしれません。ディレクトリ.├──LICENSE├──README.md├──app│├──application.go│└──url_mappings.go├──controllers│├──apis││└──apis_controller.go│└──p...", "link": "https://zenn.dev/katsun0921/articles/portfolio_02", "service": "zenn", "date_created": "2021/11/08T02:00Z", "date_unix": 1636336903 },
  { "id": "https://zenn.dev/katsun0921/articles/portfolio_01", "text": "オリジナルapiまとめアプリ作成_1\n概要これまでも記事投稿は行っていました。ただtwitter、だったりzennだったり、別のblogだったり、分散していたのでこう言った投稿を一覧できるものを作りたいと思い投稿をまとめるwebアプリを作成しましたので、作成過程をまとめました。バックエンドはGolangを使用フロントエンドはNextJsを使用GolangとginGolangのWebフレームワークはginを使用しました。https://github.com/gin-gonic/ginginでRESTAPIサーバーを作成今回作成したものは、他サービスからのAPIをまとめて取得するものだったの...", "link": "https://zenn.dev/katsun0921/articles/portfolio_01", "service": "zenn", "date_created": "2021/10/31T13:00Z", "date_unix": 1635688107 }
]
